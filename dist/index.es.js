import e,{useEffect as t}from"react";import o from"jsqr";const i=()=>({name:"NoVideoInputDevicesError",message:"No video input devices found"});i.prototype=new Error;const n=(e,t,o)=>e.length>0?e[0].deviceId:1===t.length||"user"===o?t[0].deviceId:t[1].deviceId,r=({onError:r=(e=>console.log({error:e})),onScan:a=(e=>console.log({value:e})),facingMode:s="environment",constraints:c=null,onLoad:d=(()=>null),flipHorizontally:l=!1,style:v,className:m,showViewFinder:g=!0,delay:u=800,resolution:h=600,video:p={width:"50%",height:"85%"},viewFinder:w={border:"12px solid rgba(255,255,255,0.3)",position:"absolute",borderRadius:"5px",width:"250px",height:"250px"}})=>{const f={};let b,y;const E=()=>{const e=/firefox/i.test(navigator.userAgent);let t={};navigator.mediaDevices&&"function"==typeof navigator.mediaDevices.getSupportedConstraints&&(t=navigator.mediaDevices.getSupportedConstraints());const o={};t.facingMode&&(o.facingMode={ideal:s}),t.frameRate&&(o.frameRate={ideal:25,min:10});const a=t.facingMode||e?Promise.resolve(c||o):((e,t=n)=>new Promise(((o,n)=>{let r;try{r=navigator.mediaDevices.enumerateDevices()}catch(e){n(new i)}r.then((r=>{const a=r.filter((e=>"videoinput"===e.kind));if(a.length<1)return void n(new i);const s=(e=>"environment"===e?/rear|back|environment/gi:/front|user|face/gi)(e),c=a.filter((({label:e})=>s.test(e)));o(t(c,a,e))}))})))(s).then((e=>Object.assign({},{deviceId:e},c)));a.then((e=>navigator.mediaDevices.getUserMedia({video:e}))).then(L).catch(r)},L=e=>{const{preview:t}=f;if(!t)return setTimeout((()=>L(e)),200);void 0!==(t||{}).srcObject?t.srcObject=e:void 0!==t.mozSrcObject?t.mozSrcObject=e:window.URL.createObjectURL?t.src=window.URL.createObjectURL(e):window.webkitURL?t.src=window.webkitURL.createObjectURL(e):t.src=e,t.playsInline=!0;const o=e.getTracks()[0];y=o.stop.bind(o),t.addEventListener("loadstart",(()=>R(t,o.label)))},R=(e,t)=>{e.play(),d({mirrorVideo:"environment"===s,streamLabel:t}),b=setTimeout(j,u),e.removeEventListener("loadstart",R)},j=()=>{const{preview:e,canvas:t}=f;let i=Math.floor(e.videoWidth),n=Math.floor(e.videoHeight),r=0,s=0;const c=h/(i<n?i:n);n*=c,i*=c,s=(n-h)/2*-1,r=(i-h)/2*-1,t.width=h,t.height=h;if(e&&e.readyState===e.HAVE_ENOUGH_DATA){const c=t.getContext("2d",{willReadFrequently:!0}),d=()=>{c.drawImage(e,r,s,i,n);(e=>new Promise((t=>{const i=o(e.data,e.width,e.height);i?t(i.data):t()})))(c.getImageData(0,0,t.width,t.height)).then((e=>{b=setTimeout(d,u),e&&a(e)}))};d()}else b=setTimeout(j,u)},D=e=>t=>f[e]=t,I={...p,backgroundColor:"red",overflow:"hidden"},O={top:0,left:0,right:0,bottom:0,margin:"auto auto auto auto"},U={...O,...p,display:"block",position:"absolute",overflow:"hidden",objectFit:"cover",transform:l?"scaleX(1)":"scaleX(-1)"},x={...O,...w,zIndex:10,position:"absolute"};return t((()=>(E(),()=>{b&&clearTimeout(b),y&&y()}))),e.createElement("section",{className:m,style:v},e.createElement("section",{style:I},g?e.createElement("div",{style:x}):null,e.createElement("video",{style:U,ref:D("preview")}),e.createElement("canvas",{style:{display:"none"},ref:D("canvas")})))};export{r as QrScanner};
