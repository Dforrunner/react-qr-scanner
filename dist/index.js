"use strict";var e=require("react"),t=require("jsqr");const o=()=>({name:"NoVideoInputDevicesError",message:"No video input devices found"});o.prototype=new Error;const i=(e,t,o)=>e.length>0?e[0].deviceId:1===t.length||"user"===o?t[0].deviceId:t[1].deviceId;exports.QrScanner=({onError:n=(e=>console.log({error:e})),onScan:r=(e=>console.log({value:e})),facingMode:a="environment",constraints:s=null,onLoad:c=(()=>null),flipHorizontally:d=!1,style:l,className:v,showViewFinder:m=!0,delay:g=800,resolution:u=600,video:h={width:"50%",height:"85%"},viewFinder:w={border:"12px solid rgba(255,255,255,0.3)",position:"absolute",borderRadius:"5px",width:"250px",height:"250px"}})=>{const f={};let p,b;const y=()=>{const e=/firefox/i.test(navigator.userAgent);let t={};navigator.mediaDevices&&"function"==typeof navigator.mediaDevices.getSupportedConstraints&&(t=navigator.mediaDevices.getSupportedConstraints());const r={};t.facingMode&&(r.facingMode={ideal:a}),t.frameRate&&(r.frameRate={ideal:25,min:10});const c=t.facingMode||e?Promise.resolve(s||r):((e,t=i)=>new Promise(((i,n)=>{let r;try{r=navigator.mediaDevices.enumerateDevices()}catch(e){n(new o)}r.then((r=>{const a=r.filter((e=>"videoinput"===e.kind));if(a.length<1)return void n(new o);const s=(e=>"environment"===e?/rear|back|environment/gi:/front|user|face/gi)(e),c=a.filter((({label:e})=>s.test(e)));i(t(c,a,e))}))})))(a).then((e=>Object.assign({},{deviceId:e},s)));c.then((e=>navigator.mediaDevices.getUserMedia({video:e}))).then(E).catch(n)},E=e=>{const{preview:t}=f;if(!t)return setTimeout((()=>E(e)),200);void 0!==(t||{}).srcObject?t.srcObject=e:void 0!==t.mozSrcObject?t.mozSrcObject=e:window.URL.createObjectURL?t.src=window.URL.createObjectURL(e):window.webkitURL?t.src=window.webkitURL.createObjectURL(e):t.src=e,t.playsInline=!0;const o=e.getTracks()[0];b=o.stop.bind(o),t.addEventListener("loadstart",(()=>L(t,o.label)))},L=(e,t)=>{e.play(),c({mirrorVideo:"environment"===a,streamLabel:t}),p=setTimeout(R,g),e.removeEventListener("loadstart",L)},R=()=>{const{preview:e,canvas:o}=f;let i=Math.floor(e.videoWidth),n=Math.floor(e.videoHeight),a=0,s=0;const c=u/(i<n?i:n);n*=c,i*=c,s=(n-u)/2*-1,a=(i-u)/2*-1,o.width=u,o.height=u;if(e&&e.readyState===e.HAVE_ENOUGH_DATA){const c=o.getContext("2d",{willReadFrequently:!0}),d=()=>{c.drawImage(e,a,s,i,n);(e=>new Promise((o=>{const i=t(e.data,e.width,e.height);i?o(i.data):o()})))(c.getImageData(0,0,o.width,o.height)).then((e=>{p=setTimeout(d,g),e&&r(e)}))};d()}else p=setTimeout(R,g)},j=e=>t=>f[e]=t,D={...h,backgroundColor:"red",overflow:"hidden"},I={top:0,left:0,right:0,bottom:0,margin:"auto auto auto auto"},O={...I,...h,display:"block",position:"absolute",overflow:"hidden",objectFit:"cover",transform:d?"scaleX(1)":"scaleX(-1)"},U={...I,...w,zIndex:10,position:"absolute"};return e.useEffect((()=>(y(),()=>{p&&clearTimeout(p),b&&b()}))),e.createElement("section",{className:v,style:l},e.createElement("section",{style:D},m?e.createElement("div",{style:U}):null,e.createElement("video",{style:O,ref:j("preview")}),e.createElement("canvas",{style:{display:"none"},ref:j("canvas")})))};
